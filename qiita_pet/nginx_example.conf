events {
        worker_connections 1024;
}

http {
    client_max_body_size 4M;  # increase maximum body size from default 1M to match https://github.com/qiita-spots/qiita/blob/ac62aba5333f537c32e213855edc39c273aa9871/qiita_pet/static/vendor/js/resumable-uploader.js#L51

    # ports to redirect for mainqiita
    upstream mainqiita {
        server localhost:21174;
        server localhost:21175;
        server localhost:21176;
        server localhost:21177;
    }

    # listening to 8080 and redirecting to https
    server {
           listen         8080;
           server_name    localhost;
           return         301 https://$server_name$request_uri;
    }

    server {
        listen       8383   ssl;
        server_name _;
        merge_slashes off;

        ssl_certificate	/home/runner/work/qiita/qiita/qiita_core/support_files/ci_server.crt;
        ssl_certificate_key /home/runner/work/qiita/qiita/qiita_core/support_files/ci_server.key;

        ssl_session_timeout  5m;

        # no catche
        expires off;

        port_in_redirect off;

        # download configuration, based on:
        # https://groups.google.com/forum/#!topic/python-tornado/sgadmx8Hd_s

        # protected location for working diretory
        location /protected-working_dir/ {
          internal;

          # CHANGE ME: This should match the WORKING_DIR in your qiita
          # config. E.g.,
          alias /Users/username/qiita/qiita_db/support_files/test_data/working_dir/;
        }

        # protected location
        location /protected/ {
            internal;

            # CHANGE ME: This should match the BASE_DATA_DIR in your qiita
            # config. E.g.,
            alias /Users/username/qiita/qiita_db/support_files/test_data/;
        }

        location / {
            proxy_pass $scheme://mainqiita;
            proxy_redirect     off;
            proxy_set_header   Host             $host;
            proxy_set_header   X-Real-IP        $remote_addr;
            proxy_set_header   X-Forwarded-For  $proxy_add_x_forwarded_for;
            proxy_set_header   Accept-Encoding  identity;
        }
    }
}
